package com.yixing.ui.account;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;

import java.util.ArrayList;
import java.util.List;

import com.handmark.pulltorefresh.library.PullToRefreshBase;
import com.handmark.pulltorefresh.library.PullToRefreshListView;
import com.handmark.pulltorefresh.library.PullToRefreshBase.Mode;
import com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener2;
import com.yixing.ExtraConfig;
import com.yixing.R;
import com.yixing.YixingApp;
import com.yixing.biz.AccountBiz;
import com.yixing.biz.exception.BizFailure;
import com.yixing.biz.exception.ZYException;
import com.yixing.biz.task.BizDataAsyncTask;
import com.yixing.model.BaseModel;
import com.yixing.model.MyInvestBidModel;
import com.yixing.model.MyInvestPaymentModel;
import com.yixing.model.MyInvestPaymentModel;
import com.yixing.ui.account.FragmentMyInvestBid.InvestListBidAdapter;
import com.yixing.ui.base.BaseFragment;

public class FragmentMyInvestPayment extends BaseFragment {

	private PullToRefreshListView pullToRefreshListView;
	private InvestListPaymentAdapter adapter;

	private int pageIndex = 0;
	private boolean isEnd = false;
	private TextView tv;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		return inflater.inflate(R.layout.fragment_my_investment_payment, container, false);
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onActivityCreated(savedInstanceState);
		init();
	}

	private void init() {
		pullToRefreshListView = (PullToRefreshListView) findViewById(R.id.list_my_invest_payment);

		adapter = new InvestListPaymentAdapter(getActivity());
		pullToRefreshListView.getRefreshableView().setAdapter(adapter);

		// 刷新方法
		pullToRefreshListView.setOnRefreshListener(new OnRefreshListener2<ListView>() {
			@Override
			public void onPullDownToRefresh(PullToRefreshBase<ListView> refreshView) {
				// TODO Auto-generated method stub

				getMyInvestPayment(false, true);

			}

			@Override
			public void onPullUpToRefresh(PullToRefreshBase<ListView> refreshView) {
				// TODO Auto-generated method stub
				getMyInvestPayment(false, false);
			}

		});

		tv = new TextView(getActivity());
		tv.setGravity(Gravity.CENTER);
		tv.setText("暂无数据");

		getMyInvestPayment(true, true);
	}

	private BizDataAsyncTask<List<BaseModel>> getMyInvestListTask;

	private void getMyInvestPayment(final boolean first, final boolean isPullDown) {

		getMyInvestListTask = new BizDataAsyncTask<List<BaseModel>>() {

			@Override
			protected void onExecuteSucceeded(List<BaseModel> result) {
				// TODO Auto-generated method stub

				if (result.size() < ExtraConfig.DEFAULT_PAGE_COUNT) {
					isEnd = true;
					if (isPullDown && result.size() == 0) {
						pullToRefreshListView.setEmptyView(tv);
					}

					pullToRefreshListView.setPullLabel("没有更多数据", Mode.PULL_FROM_END);
					pullToRefreshListView.setReleaseLabel("没有更多数据", Mode.PULL_FROM_END);
					pullToRefreshListView.setRefreshingLabel("没有更多数据", Mode.PULL_FROM_END);
				} else {
					isEnd = false;
					pullToRefreshListView.setPullLabel("上拉刷新", Mode.PULL_FROM_END);
					pullToRefreshListView.setReleaseLabel("放开以刷新", Mode.PULL_FROM_END);
					pullToRefreshListView.setRefreshingLabel("正在载入", Mode.PULL_FROM_END);
				}

				if (isPullDown) {
					pageIndex = 0;
					adapter.removeAll();
				}
				pageIndex++;

				for (int i = 0; i < result.size(); i++) {
					adapter.addItem((MyInvestPaymentModel) result.get(i));
				}
				adapter.notifyDataSetChanged();

				pullToRefreshListView.onRefreshComplete();

			}

			@Override
			protected List<BaseModel> doExecute() throws ZYException, BizFailure {
				// TODO Auto-generated method stub
				if (isPullDown) {

					return AccountBiz.getMyInvestList("6", "", ExtraConfig.DEFAULT_PAGE_COUNT + "");
				} else {
					if (isEnd) {
						return new ArrayList<BaseModel>();
					} else {
						return AccountBiz.getMyInvestList("6", pageIndex + "", ExtraConfig.DEFAULT_PAGE_COUNT + "");
					}
				}
			}

			@Override
			protected void OnExecuteFailed(String error) {
				// TODO Auto-generated method stub
				pullToRefreshListView.onRefreshComplete();
			}
		};

		if (first) {
			getMyInvestListTask.setWaitingView(getWaitingView());
		}

		getMyInvestListTask.execute();

	}

	@Override
	public void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		if (YixingApp.globalIndex == 1) {
			// if (((ActivityMyInvest)
			// this.getActivity()).canInvestmentOnResume) {
			// initInvestmentList(true, true, true);

			// ((ActivityMyInvest) this.getActivity()).canInvestmentOnResume =
			// false;
			// }
		}
	}

	class InvestListPaymentAdapter extends BaseAdapter {

		private List<MyInvestPaymentModel> list = new ArrayList<MyInvestPaymentModel>();
		private Context context;

		public InvestListPaymentAdapter(Context context) {
			// TODO Auto-generated constructor stub

			this.context = context;
		}

		public void addItem(MyInvestPaymentModel cellOptions) {
			list.add(cellOptions);
		}

		public void removeAll() {
			if (list != null && list.size() > 0) {
				for (int i = list.size() - 1; i >= 0; i--) {
					list.remove(i);
				}
			}
		}

		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return list == null ? 0 : list.size();
		}

		@Override
		public MyInvestPaymentModel getItem(int position) {
			// TODO Auto-generated method stub
			return list.get(position);
		}

		@Override
		public long getItemId(int position) {
			// TODO Auto-generated method stub
			return position;
		}

		@Override
		public View getView(final int position, View convertView, ViewGroup parent) {
			PaymentListViewHolder viewHolder;

			if (convertView == null) {

				convertView = LayoutInflater.from(context).inflate(R.layout.item_listview_my_investment_payment, parent,
						false);
				viewHolder = new PaymentListViewHolder(convertView);
				convertView.setTag(viewHolder);
			} else {
				viewHolder = (PaymentListViewHolder) convertView.getTag();
			}

			// list设置数据

			if (list.get(position).getTENDER_FROM().equals("2")) {
				viewHolder.iv_item_payment.setImageResource(R.drawable.transfer);
			} else {
				if ("担保贷".equals(list.get(position).getLoanFlg()))
					viewHolder.iv_item_payment.setImageResource(R.drawable.transfer_item4);
				else if ("银行保荐".equals(list.get(position).getLoanFlg()))
					viewHolder.iv_item_payment.setImageResource(R.drawable.transfer_item9);
				else if ("e兴车贷".equals(list.get(position).getLoanFlg()))
					viewHolder.iv_item_payment.setImageResource(R.drawable.transfer_item5);
				else if ("e兴房贷".equals(list.get(position).getLoanFlg()))
					viewHolder.iv_item_payment.setImageResource(R.drawable.transfer_item2);
				else if ("助教贷".equals(list.get(position).getLoanFlg()))
					viewHolder.iv_item_payment.setImageResource(R.drawable.transfer_item6);
				else if ("助农贷".equals(list.get(position).getLoanFlg()))
					viewHolder.iv_item_payment.setImageResource(R.drawable.transfer_item8);
				else if ("创业贷".equals(list.get(position).getLoanFlg()))
					viewHolder.iv_item_payment.setImageResource(R.drawable.transfer_item1);
				else if ("信用贷".equals(list.get(position).getLoanFlg()))
					viewHolder.iv_item_payment.setImageResource(R.drawable.transfer_item7);

			}

			viewHolder.tv_item_payment_profit.setText(list.get(position).getProfit());
			viewHolder.tv_item_payment_finaning.setText(list.get(position).getFinancingAmount());
			viewHolder.tv_item_payment_title.setText(list.get(position).getTitle());
			viewHolder.tv_item_payment_received.setText(list.get(position).getReceivedAmount());

			// 点击进入回款详情_债权
			final int pos = position;
			viewHolder.tv_item_payment_detail.setOnClickListener(new OnClickListener() {

				@Override
				public void onClick(View v) {
					// TODO Auto-generated method stub
					if (list.get(position).getTENDER_FROM().trim().equals("1")) {
						// 非债权
						Intent intent = new Intent(getActivity(), ActivityReturnMoneyDetailOne.class);
						intent.putExtra(ExtraConfig.IntentExtraKey.RETURN_MONEY_DETAIL_ONE_ID,
								list.get(pos).getOID_TENDER_ID());
						intent.putExtra(ExtraConfig.IntentExtraKey.RETURN_MONEY_DETAIL_ONE_TYPR,
								list.get(pos).getTENDER_FROM());
						startActivity(intent);
					} else {
						// 债权
						Intent intent = new Intent(getActivity(), ActivityReturnMoneyDetailTwo.class);
						intent.putExtra(ExtraConfig.IntentExtraKey.RETURN_MONEY_DETAIL_TWO_ID,
								list.get(pos).getOID_TENDER_ID());
						intent.putExtra(ExtraConfig.IntentExtraKey.RETURN_MONEY_DETAIL_TWO_TYPR,
								list.get(pos).getTENDER_FROM());
						intent.putExtra(ExtraConfig.IntentExtraKey.RETURN_MONEY_DETAIL_TWO_DATE, list.get(pos).getFINANCE_PERIOD_FORMAT());
						intent.putExtra(ExtraConfig.IntentExtraKey.RETURN_MONEY_DETAIL_TWO_CONTRACT_ID, list.get(pos).getTRANSFER_CONTRACT_ID());
						
						startActivity(intent);

					}

				}
			});

			return convertView;
		}

		class PaymentListViewHolder {

			ImageView iv_item_payment;// flg小图片
			TextView tv_item_payment_detail;// 回款详情
			TextView tv_item_payment_profit;// 收益
			TextView tv_item_payment_finaning;// 融资金额
			TextView tv_item_payment_title;// 标题
			TextView tv_item_payment_received;// 已收金额

			public PaymentListViewHolder(View itemView) {

				iv_item_payment = (ImageView) itemView.findViewById(R.id.iv_item_payment);
				tv_item_payment_detail = (TextView) itemView.findViewById(R.id.tv_item_payment_detail);
				tv_item_payment_profit = (TextView) itemView.findViewById(R.id.tv_item_payment_profit);
				tv_item_payment_finaning = (TextView) itemView.findViewById(R.id.tv_item_payment_finaning);
				tv_item_payment_title = (TextView) itemView.findViewById(R.id.tv_item_payment_title);
				tv_item_payment_received = (TextView) itemView.findViewById(R.id.tv_item_payment_received);

			}

		}

	}

}